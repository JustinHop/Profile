README for perl-support.vim (Version 3.2.1) / August 29 2006

  *  INSTALLATION
  *  RELEASE NOTES 
  *  FILES
  *  ADDITIONAL TIPS
  *  CREDITS

Perl Support implements a Perl-IDE for Vim/gVim. It is written to considerably
speed up writing code in a consistent style.  This is done by inserting
complete statements, comments, idioms, code snippets, templates, and POD
documentation.  Reading perldoc is integrated.  Syntax checking, running a
script, running perltidy,  running perlcritics, starting a debugger and a
profiler can be done with a keystroke.  There are many additional hints and
options which can improve speed and comfort when writing Perl. Please read the
documentation.

=======================================================================================
  INSTALLATION
=======================================================================================

The subdirectories in the zip archive  perl-support.zip  mirror the directory
structure which is needed below the local installation directory $HOME/.vim/
or $VIM\vimfiles (on the Windows platforms).

(1) Copy the zip archive  perl-support.zip to $HOME/.vim and run

      unzip perl-support.zip

    If you have already an older version of perl-support and you have modified the
    template files you may want to save your templates first or copy the files from the
    archive by hand.

(2) Set at least some personal details into .vimrc by overriding some defaults.
    Here the minimal personalization (my settings as an example, of course):

      let g:Perl_AuthorName      = 'Dr.-Ing. Fritz Mehner'     
      let g:Perl_AuthorRef       = 'Mn'                         
      let g:Perl_Email           = 'mehner@fh-swf.de'            
      let g:Perl_Company         = 'FH SÃ¼dwestfalen, Iserlohn'    

    The files customization.vimrc and customization.gvimrc are replacements or 
    extensions for your .vimrc and .gvimrc ( _vimrc and _gvimrc under Windows).
    You may want to use parts of them. The files are documented. 

There are a lot of features and options which can be used and influenced:

  *  use of template files and tags
  *  using and managing personal code snippets
  *  Perl dictionary for keyword completion
  *  the Perl module list
  *  reading Perl documentation with integrated calls to perldoc
  *  removing the root menu
  *  using additional plugins

Restart gVim/Vim generate the help tags 

  :helptags ~/.vim/doc

and look at the perlsupport help with

  :help perlsupport 

               +-----------------------------------------------+
               | +-------------------------------------------+ |
               | |    ** PLEASE READ THE DOCUMENTATION **    | |
               | |    Actions differ for different modes!    | |
               | +-------------------------------------------+ |
               +-----------------------------------------------+


=======================================================================================
  RELEASE NOTES 
=======================================================================================

---------------------------------------------------------------------------------------
  RELEASE NOTES FOR VERSION 3.2.1
---------------------------------------------------------------------------------------
+ Better adaption for 'perlcritic', version 0.19 .
+ Bugfix: key mappings \cb and \cn are working now.

=======================================================================================
  OLDER RELEASE NOTES : see file 'ChangeLog'
=======================================================================================

=======================================================================================
  FILES
=======================================================================================

README.perlsupport        This file.
ChangeLog                 The change log.

codesnippets-perl/*       Some Perl code snippets as a starting point.

doc/perlsupport.txt       The help file for the local online help. 
                          
ftplugin/perl.vim         A filetype plugin. Define hotkeys, create a local 
                          dictionary for each Perl file.

plugin/perl-support.vim   The Perl plugin for Vim/gVim.
plugin/pmdesc3.pl         Perl script; generates a list of all installed Perl modules
plugin/efm_perl.pl        Perl script; Reformats the error messages of the Perl interpreter
plugin/wrapper.sh         The wrapper script for the use of an xterm.

plugin/templates/perl-file-header           -+-  Perl template files 
plugin/templates/perl-frame                  |   (see perlsupport.txt)
plugin/templates/perl-function-description   |
plugin/templates/perl-module-header          |
plugin/templates/perl-pod                    |
plugin/templates/perl-test-header           -+

wordlists/perl.list       A file used as dictionary for automatic word completion. 
                          This file is referenced in the file customization.vimrc .

-----------------------   -------------------------------------------------------------
-----------------------   The following files and extensions are for convenience only.
                          perl-support.vim will work without them.
                          -------------------------------------------------------------

rc/customization.ctags       Additional settings I use in  .ctags to enable navigation
                             through POD with the plugin taglist.vim.

rc/customization.gvimrc      Additional settings I use in  .gvimrc:
                               hot keys, mouse settings, ...
                             The file is commented. Append it to your .gvimrc if you like.

rc/customization.perltidyrc  Additional settings I use in  .perltidyrc to enable 
                             customize perltidy.

rc/customization.smallprof   Additional settings I use to control the profiler 
                             Devel::SmallProf

rc/customization.vimrc       Additional settings I use in  .vimrc:  incremental search,
                             tabstop, hot keys, font, use of dictionaries, ...
                             The file is commented. Append it to your .vimrc if you like.

doc/perl-hot-keys.pdf     Reference card for the key mappings. 
                          The mappings can also be used with the non-GUI Vim, 
                          where the menus are not available.
doc/pmdesc3.text          The man page for pmdesc3.


=======================================================================================
  ADDITIONAL TIPS
=======================================================================================

(1) You may want to use a central hidden directory for all your backup files (see also
    rc/customization.vimrc ):

    1.1 Add the following line to .vimrc (see also rc/customization.vimrc ):

      set backupdir  =$HOME/.vim.backupdir  
    
    1.2 Create  $HOME/.vim.backupdir  .

    1.3 Add the following line to your shell initialization file  ~/.profile :

      find $HOME/.vim.backupdir/  -name "*" -type f -mtime +60 -exec rm -f {} \;

    When you are logging in all files in the backup directory older then 60
    days (-mtime +60) will be removed (60 days is a suggestion, of course). 
    Be shure to backup in shorter terms !

(2) gVim. Toggle 'insert mode' <--> 'normal mode' with the right mouse button
    (see mapping in file customization.gvimrc).

(3) gVim. Use tear off menus.

(4) Try 'Focus under mouse' as window behavior (No mouse click when the mouse
    pointer is back from the menu entry).

(5) Use Emulate3Buttons "on" (X11) even for a 3-button mouse. Pressing left and
    right button simultaneously without moving your fingers is faster than 
    moving a finger to the middle button (which is often a wheel).


=======================================================================================
  CREDITS
=======================================================================================

David Fishburn <fishburn@ianywhere.com> for the implementation of the 
  single root menu and several suggestions for improving the customization
  and the documentation.
  
Ryan Hennig <hennig@amazon.com> improved the install script.

Aristotle, http://qs321.pair.com/~monkads/ is the author of the script pmdesc2
  which is the base of the included script pmdesc3.

David Fishburn contributed changes for the Windows platform and suggested to not let
  enter snippets and templates the list of alternate files.

The two files pod-template-application.pl and pod-template-module.pl are taken from 
  Damian Conway's book "Perl Best Practices".


=======================================================================================
